Tables
CREATE TABLE users (
	user_id int IDENTITY(1,1) NOT NULL,
	username varchar(50) NOT NULL,
	password varchar(50) NOT NULL ,
	email varchar(100) NOT NULL,
	rank int DEFAULT 1,
	PRIMARY KEY (user_id)
)

CREATE TABLE bookings (
	booking_id int IDENTITY(1,1) NOT NULL,
	has_paid varchar(1) NOT NULL,
	booking_date DATE NOT NULL,
	movie_id int FOREIGN KEY REFERENCES movies(movie_id),	
	user_id int FOREIGN KEY REFERENCES users(user_id),
	PRIMARY KEY (booking_id)
)

CREATE TABLE movies (
	movie_id int IDENTITY(1,1) NOT NULL,
	movie_name varchar(100) NOT NULL,
	movie_duration int NOT NULL,
	movie_type varchar(100) NOT NULL,
	movie_release_date date NOT NULL,
	movie_tickets int NOT NULL,
	movie_status varchar(20) DEFAULT 'active',
	PRIMARY KEY (movie_id)
)


Stored Procedures

spGetBookings
SELECT bookings.booking_id, bookings.booking_date, users.username, movies.movie_name, bookings.has_paid
FROM bookings
INNER JOIN users ON bookings.user_id = users.user_id
INNER JOIN movies ON bookings.movie_id = movies.movie_id;

spGetMovies
SELECT * FROM movies

spGetUsers
SELECT username, email, user_id
FROM users
WHERE rank = 1;
